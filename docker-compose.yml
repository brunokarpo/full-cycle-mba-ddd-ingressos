services:
  database:
    image: postgres:17.4-alpine
    restart: always
    environment:
      POSTGRES_DB: ingressos-db
      POSTGRES_USER: ingressos-app
      POSTGRES_PASSWORD: ingressos-app
    ports:
      - "5432:5432"
    healthcheck:
      test: "pg_isready -q -U ingressos-app"
      interval: 5s
      timeout: 1s
      retries: 2

  flyway:
    image: flyway/flyway:11.8.1-alpine
    command: ["-url=jdbc:postgresql://database:5432/ingressos-db", "-user=ingressos-app", "-password=ingressos-app", "-schemas=public", "-postgresql.transactional.lock=false",  "migrate"]
    volumes:
      - ./scripts/db/migrations:/flyway/sql
    depends_on:
      database:
        condition: service_healthy

  localstack:
    image: localstack/localstack:4.6.0
    container_name: localstack
    environment:
      - SERVICES=sqs
      - DEBUG=1
      - PERSISTENCE=1
      - LOCALSTACK_HOST=localstack
    ports:
      - "4566:4566"
      - "4510-4559:4510-4559"
      - "5678:5678"
    healthcheck:
      test: "curl -f http://localhost:4566/_localstack/health || exit 1"
      interval: 5s
      timeout: 5s
      retries: 3

  aws:
    image: organs/awscli
    entrypoint: [ "sh", "/run/localstack.sh" ]
    environment:
      - AWS_ACCESS_KEY=anyAccess
      - AWS_SECRET_ACCESS_KEY=anySecret
      - AWS_DEFAULT_REGION=us-east-1
      - LOCALSTACK_HOSTNAME=localstack
    volumes:
      - ./scripts/aws:/run
    depends_on:
      localstack:
        condition: service_healthy